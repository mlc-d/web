<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>https://mlc-d.github.io/web/en/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-co</language><atom:link href="https://mlc-d.github.io/web/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://mlc-d.github.io/web/en/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlc-d.github.io/web/en/about/</guid>
      <description>Informatics engineering student. Tech enthusiast. Permanentely willing to learn new things, and find practial appliances for those concepts.
Technologies i&amp;rsquo;ve worked with Golang (Echo, bun, GORM, HUGO) Python PostgreSQL / MySQL / MariaDB / SQLite HTML/CSS (Bootstrap / TailwindCSS) Javascript (Svelte) Interested in Backend development Data mining GraphQL </description>
      <content>&lt;p&gt;Informatics engineering student. Tech enthusiast. Permanentely willing to learn new things, and find practial appliances for those concepts.&lt;/p&gt;
&lt;h3 id=&#34;technologies-ive-worked-with&#34;&gt;Technologies i&amp;rsquo;ve worked with&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Golang (Echo, bun, GORM, HUGO)&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;PostgreSQL / MySQL / MariaDB / SQLite&lt;/li&gt;
&lt;li&gt;HTML/CSS (Bootstrap / TailwindCSS)&lt;/li&gt;
&lt;li&gt;Javascript (Svelte)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;interested-in&#34;&gt;Interested in&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Backend development&lt;/li&gt;
&lt;li&gt;Data mining&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://mlc-d.github.io/web/en/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlc-d.github.io/web/en/contact/</guid>
      <description>Check out this links:
Email Twitter: @mlc_2220 LinkedIn </description>
      <content>&lt;p&gt;Check out this links:&lt;/p&gt;
&lt;h3 id=&#34;emailmailtomlcposteonet&#34;&gt;&lt;a href=&#34;mailto:m.lc@posteo.net&#34;&gt;Email&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;twitter-mlc_2220httpstwittercommlc_2220&#34;&gt;&lt;a href=&#34;https://twitter.com/mlc_2220&#34;&gt;Twitter: @mlc_2220&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;linkedinwwwlinkedincominmateo-león-camacho-572b7223a&#34;&gt;&lt;a href=&#34;www.linkedin.com/in/mateo-le%C3%B3n-camacho-572b7223a&#34;&gt;LinkedIn&lt;/a&gt;&lt;/h3&gt;
</content>
    </item>
    
    <item>
      <title>Pfront</title>
      <link>https://mlc-d.github.io/web/en/projects/pfront/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlc-d.github.io/web/en/projects/pfront/</guid>
      <description>Interacting with the Polygon API exclusively through curl or Postman can be tedious. For the sake of convenience, I built a frontend client with SvelteKit, in my opinion, the quickest framework to deliver results.
Source code.</description>
      <content>&lt;p&gt;Interacting with the Polygon API exclusively through curl or Postman can be tedious. For the sake of convenience, I built a frontend client with SvelteKit, in my opinion, the quickest framework to deliver results.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mlc-d/pfront&#34;&gt;Source code.&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Polygon</title>
      <link>https://mlc-d.github.io/web/en/projects/polygon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlc-d.github.io/web/en/projects/polygon/</guid>
      <description>WMS (warehouse management system) API built with Golang. It uses Echo as web server, and bun as ORM. Authentication and authorization based on a JSON Web Tokens solution (access-refresh model), full item movements history, CRUD operations.
Source code.</description>
      <content>&lt;p&gt;WMS &lt;em&gt;(warehouse management system)&lt;/em&gt; API built with Golang. It uses &lt;a href=&#34;https://echo.labstack.com/&#34;&gt;Echo&lt;/a&gt; as web server, and &lt;a href=&#34;https://bun.uptrace.dev/&#34;&gt;bun&lt;/a&gt; as ORM. Authentication and authorization based on a JSON Web Tokens solution (access-refresh model), full item movements history, CRUD operations.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mlc-d/polygon&#34;&gt;Source code.&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Receipts</title>
      <link>https://mlc-d.github.io/web/en/projects/receipts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlc-d.github.io/web/en/projects/receipts/</guid>
      <description>At home, several apartments share the same bills for public services. The person in charge of paying them had a rather cumbersome system; I made a simple API to store records of bills and calculate payments.
Código fuente.</description>
      <content>&lt;p&gt;At home, several apartments share the same bills for public services. The person in charge of paying them had a rather cumbersome system; I made a simple API to store records of bills and calculate payments.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mlc-d/receipts&#34;&gt;Código fuente.&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
