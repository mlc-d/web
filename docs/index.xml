<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mlc</title>
    <link>https://mlc-d.github.io/web/</link>
    <description>Recent content on mlc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-co</language>
    <lastBuildDate>Tue, 14 Jun 2022 13:17:18 -0500</lastBuildDate><atom:link href="https://mlc-d.github.io/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Polygon</title>
      <link>https://mlc-d.github.io/web/projects/polygon/</link>
      <pubDate>Tue, 14 Jun 2022 13:17:18 -0500</pubDate>
      
      <guid>https://mlc-d.github.io/web/projects/polygon/</guid>
      <description>API WMS (sistema de administración de almacenes) construída con Golang, usando Echo como servidor web, y bun como ORM (mapeo relacional de objetos). Autenticación y autorización de usuarios basada en una solución de JSON Web Tokens (modelo de dos tokens), endpoints protegidos, historial completo de movimientos, operaciones de CRUD básicas y avanzadas.
Código fuente.</description>
      <content>&lt;p&gt;API WMS &lt;em&gt;(sistema de administración de almacenes)&lt;/em&gt; construída con Golang, usando &lt;a href=&#34;&#34;&gt;Echo&lt;/a&gt; como servidor web, y &lt;a href=&#34;&#34;&gt;bun&lt;/a&gt; como ORM &lt;em&gt;(mapeo relacional de objetos)&lt;/em&gt;. Autenticación y autorización de usuarios basada en una solución de JSON Web Tokens (modelo de dos tokens), endpoints protegidos, historial completo de movimientos, operaciones de CRUD básicas y avanzadas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mlc-d/polygon&#34;&gt;Código fuente.&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Pfront</title>
      <link>https://mlc-d.github.io/web/projects/pfront/</link>
      <pubDate>Tue, 14 Jun 2022 12:17:54 -0500</pubDate>
      
      <guid>https://mlc-d.github.io/web/projects/pfront/</guid>
      <description>Interactuar con la API de Polygon a través de curl o Postman puede resultar tedioso. Para facilitar el proceso, creé un cliente frontend, utilizando el framework que, en mi opinión, entrega resultados más rápidamente: SvelteKit.</description>
      <content>&lt;p&gt;Interactuar con la API de Polygon a través de &lt;em&gt;curl&lt;/em&gt; o Postman puede resultar tedioso. Para facilitar el proceso, creé un cliente frontend, utilizando el framework que, en mi opinión, entrega resultados más rápidamente: SvelteKit.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Acerca de</title>
      <link>https://mlc-d.github.io/web/about/</link>
      <pubDate>Tue, 14 Jun 2022 11:42:12 -0500</pubDate>
      
      <guid>https://mlc-d.github.io/web/about/</guid>
      <description>Estudiante de ingeniería informática. Entusiasta de la tecnología. Constantemente aprendiendo cosas nuevas, y buscando aplicaciones prácticas para tales conceptos.
Tecnologías con las que he trabajado Golang (Echo, bun, GORM, HUGO) Python PostgreSQL / MySQL / MariaDB / SQLite HTML/CSS (Bootstrap / TailwindCSS) Javascript (SvelteKit) Intereses Desarrollo backend Minería de datos GraphQL </description>
      <content>&lt;p&gt;Estudiante de ingeniería informática. Entusiasta de la tecnología. Constantemente aprendiendo cosas nuevas, y buscando aplicaciones prácticas para tales conceptos.&lt;/p&gt;
&lt;h3 id=&#34;tecnologías-con-las-que-he-trabajado&#34;&gt;Tecnologías con las que he trabajado&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Golang (Echo, bun, GORM, HUGO)&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;PostgreSQL / MySQL / MariaDB / SQLite&lt;/li&gt;
&lt;li&gt;HTML/CSS (Bootstrap / TailwindCSS)&lt;/li&gt;
&lt;li&gt;Javascript (SvelteKit)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;intereses&#34;&gt;Intereses&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Desarrollo backend&lt;/li&gt;
&lt;li&gt;Minería de datos&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
